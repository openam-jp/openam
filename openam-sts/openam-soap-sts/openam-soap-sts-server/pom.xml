<?xml version="1.0" encoding="UTF-8"?>

<!--
 * The contents of this file are subject to the terms of the Common Development and
 * Distribution License (the License). You may not use this file except in compliance with the
 * License.
 *
 * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
 * specific language governing permission and limitations under the License.
 *
 * When distributing Covered Software, include this CDDL Header Notice in each file and include
 * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
 * Header, with the fields enclosed by brackets [] replaced by your own identifying
 * information: "Portions Copyrighted [year] [name of copyright owner]".
 *
 * Copyright 2013-2016 ForgeRock AS.
 * Portions Copyrighted 2019-2020 Open Source Solution Technology Corporation
 * Portions Copyrighted 2019 OGIS-RI Co., Ltd.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>jp.openam</groupId>
        <artifactId>openam-soap-sts</artifactId>
        <version>15.0.0-SNAPSHOT</version>
    </parent>

    <name>OpenAM SOAP STS Server</name>
    <description>OpenAM implementation of WS-Trust SecureTokenService</description>
    <artifactId>openam-soap-sts-server</artifactId>
    <packaging>war</packaging>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <configuration>
                        <attachClasses>true</attachClasses>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <dependency>
            <groupId>jp.openam</groupId>
            <artifactId>openam-audit-context</artifactId>
        </dependency>
        <dependency>
            <groupId>jp.openam</groupId>
            <artifactId>openam-audit-core</artifactId>
        </dependency>
        <dependency>
            <groupId>jp.openam</groupId>
            <artifactId>openam-common-sts</artifactId>
        </dependency>
        <dependency>
            <groupId>jp.openam</groupId>
            <artifactId>openam-client-sts</artifactId>
        </dependency>
        <dependency>
            <groupId>jp.openam.commons.guava</groupId>
            <artifactId>forgerock-guava-collect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.geronimo.genesis</groupId>
                    <artifactId>genesis-java5-flava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-bindings-soap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-ws-policy</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-ws-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf.services.sts</groupId>
            <artifactId>cxf-services-sts-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.santuario</groupId>
            <artifactId>xmlsec</artifactId>
        </dependency>
        <!--
            the cxf-rt-transports depends on cxf-rt-transports-jetty, which depends on slf4j-api(1.6.2). In some cases,
            cxf does not find a slf4j spi, so defaults to a no-op logger, so I am introducing this dependency.
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
        </dependency>
        <dependency>
            <groupId>org.restlet.jee</groupId>
            <artifactId>org.restlet</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <classifier>no_aop</classifier>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-assistedinject</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.ws</groupId>
            <artifactId>jaxws-api</artifactId>
        </dependency>

        <!-- test dependencies -->

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>restlet-repository</id>
            <name>Restlet Repository</name>
            <url>http://maven.restlet.com</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>precommit</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <script language="groovy"><![CDATA[
                                            File libs = new File(project.getProperty("project.build.directory") +
                                                    "/generated-sources/license/THIRD-PARTY.txt")
                                            File thirdParty = new File(project.getProperty("basedir") +
                                                    "/../../../legal/THIRDPARTYREADME.txt")
                                            List published = thirdParty.readLines().findAll { s -> s.startsWith("Version:") }
                                            List missing = [];
                                            libs.eachLine { line ->
                                                (line =~ /\(([^:\(]+):([^:]+):([^ ]+)/).each { match, groupId, artifactId, version ->
                                                    if (!groupId.startsWith("org.forgerock") &&
                                                            !published.any { s -> s.contains(artifactId) && s.contains(version) }) {
                                                        missing.add("$groupId:$artifactId:$version")
                                                    }
                                                }
                                            }
                                            if (!missing.isEmpty()) {
                                                throw new Exception("Missing libraries from THIRDPARTYREADME.txt:\n" +
                                                        missing.join("\n"))
                                            }
                                        ]]></script>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-jsr223</artifactId>
                                <version>2.3.3</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
